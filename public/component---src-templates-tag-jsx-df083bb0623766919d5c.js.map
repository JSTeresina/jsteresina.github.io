{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./src/components/Posts/Posts.jsx"],"names":["Tag","render","this","props","data","tag","pathContext","pathname","location","title","description","url","style","fontSize","padding","Component","pageQuery","posts","allMarkdownRemark","edges","map","node","key","fields","slug","className","to","frontmatter","date"],"mappings":"4QAMqBA,E,gLACnBC,OAAA,WAAU,IAAD,EACuBC,KAAKC,MAA3BC,EADD,EACCA,KACAC,EAFD,EACOC,YACND,IACAE,EAAaL,KAAKC,MAAMK,SAAxBD,SACR,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CACEE,MAAK,QAAUJ,EACfK,YAAW,sCAAwCL,EAAxC,wBACXM,IAAKJ,IAEP,wBAAIK,MAAO,CAAEC,SAAU,OAAQC,QAAS,aAAxC,6BAC6BT,GAE7B,kBAAC,IAAD,CAAOD,KAAMA,O,GAhBUW,aAuBpBC,EAAS,a,yGCzBP,G,UAAA,YAAe,IAEtBC,EAFqB,EAAXb,KACOc,kBAAfC,MAEAC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACR,yBAAKC,IAAKD,EAAKE,OAAOC,KAAMC,UAAU,QACpC,kBAAC,OAAD,CAAMC,GAAIL,EAAKE,OAAOC,KAAMC,UAAU,cAAa,4BAAKJ,EAAKM,YAAYlB,QACzE,uBAAGgB,UAAU,aAAaJ,EAAKM,YAAYC,MAC3C,2BAAIP,EAAKM,YAAYjB,iBAI3B,OACE,yBAAKe,UAAU,SACZR","file":"component---src-templates-tag-jsx-df083bb0623766919d5c.js","sourcesContent":["import React, { Component } from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Posts from \"../components/Posts\";\nimport SEO from \"../components/SEO/SEO\";\n\nexport default class Tag extends Component {\n  render() {\n    const { data, pathContext } = this.props;\n    const { tag } = pathContext;\n    const { pathname } = this.props.location;\n    return (\n      <Layout>\n        <div>\n          <SEO\n            title={`Tag: ${tag}`}\n            description={`Todos os posts marcados com a tag \"${tag}\" no CodeStack Brasil`}\n            url={pathname}\n          />\n          <h2 style={{ fontSize: \"22px\", padding: \"0px 15px\" }}>\n            Todos os posts com a tag: {tag}\n          </h2>\n          <Posts data={data} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___prefix], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"DD/MM/YYYY\")\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport './Posts.css';\n\nexport default ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  const posts = (\n    edges.map(({ node }) => (\n      <div key={node.fields.slug} className=\"post\">\n        <Link to={node.fields.slug} className=\"post-title\"><h2>{node.frontmatter.title}</h2></Link>\n        <p className=\"post-date\">{node.frontmatter.date}</p>\n        <p>{node.frontmatter.description}</p>\n      </div>\n    ))\n  );\n  return (\n    <div className=\"posts\">\n      {posts}\n    </div>\n  )\n}"],"sourceRoot":""}